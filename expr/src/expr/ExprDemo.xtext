grammar expr.ExprDemo with org.eclipse.xtext.common.Terminals

generate exprDemo "http://www.ExprDemo.expr"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore


Model:
	elements+=Element*;
	
Element:
	VarDecl | Formula | EnumDecl;
	
EnumDecl:	
	"enum" name=ID "{"
		(literals+=EnumLiteral)*
	"}";
	
EnumLiteral returns Symbol:
	{EnumLiteral} name=ID;

	
VarDecl returns Symbol:
	{VarDecl} "var" type=Type name=ID ";";

Type:
	PrimitiveType | ArrayType;
	
PrimitiveType:
	IntType | BoolType | FloatType | EnumType; 
	
ArrayType:
	{ArrayType} "array" "[" baseType=Type "]";
	
EnumType:
	 enumRef=[EnumDecl];
	
IntType:
	 {IntType} "int";
	
BoolType:
	{BoolType} "bool";

FloatType:
	{FloatType} "float";

Formula:
	"calc" type=Type name=ID "=" expr=Expr ";";
	
Expr:
	Addition;
	
Addition returns Expression:
	Multiplication ({Plus.left=current}"+" right=Multiplication)*;
	
Multiplication returns Expression:
	PostfixOperators ( {Multi.left=current} "*" right=PostfixOperators)*; 
	
PostfixOperators returns Expression:
	Atomic ({ArrayAccess.expr=current} "[" index=Expr "]")?;
	
Atomic returns Expression:
	{SymbolRef} symbol=[Symbol|QID] |
	{NumberLiteral} value=NUMBER;
	
terminal NUMBER returns ecore::EBigDecimal:
	('0'..'9')* ('.' ('0'..'9')+)?;
	
terminal INT returns ecore::EInt: 
	"$$$don't use this anymore$$$";

QID:
	ID ("." ID)*;
